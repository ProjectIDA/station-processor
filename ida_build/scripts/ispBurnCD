#!/bin/csh
# $Id: ispBurnCD,v 1.10 2005/02/11 22:11:16 dechavez Exp $
#
# Interactive script to copy ISPD generated ISO images to CD

# This only works if there is a "tee" subdir and we are
# sitting right above it

set StartingDir = `pwd`
set TeeDir = "$StartingDir/tee"
if (! -e $TeeDir) then
    echo "${myname}: missing $TeeDir"
    goto abort
endif

# General setup

set myname = ispBurnCD

set setup  = ~nrts/scripts/ScriptSetup
if (! -e $setup ) then
    echo "${myname}: missing $setup"
    goto abort
endif
source $setup

set IsISP = 1
if ($#argv == 1) then
    if ($argv[1] == "noISP") set IsISP = 0
endif

# Set up subdirectories

set IsoDir  = "$StartingDir/iso"

if (! -e $IsoDir) then
    echo "${myname}: missing $IsoDir"
    goto abort
endif

cd $IsoDir
if ($status != 0) then
    echo "${myname}: can't change directory to $IsoDir"
    goto abort
endif

set DoneIsos = "$IsoDir/done/images"
if (! -e $DoneIsos) then
    set command = "mkdir -p $DoneIsos"
    logger -t $myname"[$$]" -p user.info "$command"
    $command
    if ($status != 0) then
        logger -t $myname"[$$]" -p user.info "FAILED"
        goto abort
    endif
endif

# Find all the available images

@ count = 0
set dummy = Dummy.iso
touch $dummy
set images = `ls *.iso`
@ NumImages = `echo $images | wc -w` - 1
rm -rf $dummy
if ($NumImages == 0) goto NormalExit

# Find the CDR device

echo "Checking CD writer status, please wait..."

set CDR_Device = `cdrw -l | grep -i writer | awk '{print $1}'`
if ($status != 0) then
    echo "${myname}: unable to determine CDR device"
    goto abort
endif

if ($NumImages > 1) then
    echo ""
    echo "$NumImages ISO images are ready to be copied to CD-ROM.  These images"
    echo "will be copied one by one.  After each copy is complete you"
    echo "will be give the opportunity to generate additional copies of"
    echo "the same data before proceeding to the next image."
else if ($NumImages == 1) then
    echo ""
    echo "1 ISO image is ready to be copied to CD-ROM.  After the copy"
    echo "is complete, you will be given the opportunity to generate"
    echo "additional copies of the same data."
endif

foreach image ($images)

    if ($image == $dummy) continue
    @ count++

    @ CopyCount = 1
    echo ""
    echo "*** About to copy ISO image $image ***"

BurnCD:

    echo -n "Insert a blank CD and press enter when ready (or quit to abort) "
    set answer = $<
    if ($answer == q || $answer == quit) goto PrematureExit
    set command = "cdrw -i $image"
    $command
    set exitstatus = $status

TryAgain:
    if ($exitstatus != 0) then
        set result = FAILURE
        echo -n "Operation failed.  Try again? "
        set answer = $<
        if ($answer == y || $answer == yes) then
            eject $CDR_Device
            goto BurnCD
        endif
        if ($answer == n || $answer == no ) then
            if ($CopyCount > 1) then
                set result = SUCCESS
                goto ImageCopyAttemptCompleted
            else
                goto PrematureExitWithErrors
            endif
        endif
        echo "Please answer yes or no."
        goto TryAgain
    else
        set result = SUCCESS
        echo -n "$image copied OK.  Generate another CD with the same data? "
        set answer = $<
        if ($answer == y || $answer == yes) then
            @ CopyCount++
            goto BurnCD
        endif
        if ($answer != n && $answer != no) then
            echo "Please answer yes or no."
            goto TryAgain
        endif
    endif

ImageCopyAttemptCompleted:
    if ($result == SUCCESS) then
        mv $image $DoneIsos
        pkill -HUP -x -u nrts ispd
        pkill -HUP -x -u nrts ispDisplay
    else
        goto TryAgain
    endif
    
end

NormalExit:
pkill -HUP ispd
echo ""
if ($count > 0) then
    echo "CD generation completed OK."
else
    echo "No ISO images are ready.  If desired, you may use the 'fb'"
    echo "command to force the staged files into a short ISO volume"
    echo "which you may then archive to the CD."
endif
echo ""
echo "/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"
echo "\!\!\! Remember to make sure you leave a blank CD in the drive \!\!\!"
echo "/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"
echo ""
if ($IsISP) then
    echo -n "Press enter to return to main screen..."
    set answer = $<
endif

exit 0

PrematureExitWithErrors:
echo ""
echo "CD generation terminated prematurely due to errors."
PrematureExit:
pkill -HUP ispd
echo ""
if ($IsISP) then
    echo -n "Press enter to return to main screen..."
    set answer = $<
endif

exit 0

abort:
pkill -HUP ispd
echo ""
echo "*************************************************************************"
echo "SERIOUS PROBLEM: Unable to execute $myname script due to unexpcted errors"
echo "*************************************************************************"
echo ""
echo "Please note any error messages and contact IDA for assistance."
echo ""
echo -n "Press enter to return to main screen..."

set answer = $<
exit 1

# Revision History
#
# $Log: ispBurnCD,v $
# Revision 1.10  2005/02/11 22:11:16  dechavez
# general cleanup and mods to support NRTS-based CD writers
#
# Revision 1.8  2003/10/02 20:28:49  dechavez
# adjustments for running under vold
#
# Revision 1.7  2002/09/25 18:01:06  dechavez
# pkill ispDisplay instead if isp (script)
#
# Revision 1.6  2002/01/02 19:19:37  dec
# added support for additional unusual operator sequences
#
# Revision 1.5  2001/12/20 22:49:34  dec
# fixed problem with DoneIsos dir definition
#
# Revision 1.4  2001/12/20 18:11:06  dec
# move burned files to DoneIsos
#
# Revision 1.3  2001/10/26 23:43:46  dec
# add eject after successful writes
#
# Revision 1.2  2001/10/25 00:48:08  dec
# Handle the case when no ISO images are pending gracefully
#
# Revision 1.1  2001/10/24 22:57:15  dec
# created
#
