#!/bin/csh -f
# $Id: isiBurnCD,v 1.6 2005/10/11 18:19:36 dechavez Exp $
#
# Interactive script to copy ISI generated ISO images to CD

set debug  = 0
set myname = isiBurnCD

if ($debug) logger -t $myname"[$$]" -p user.info "begin"

# General setup

set setup  = ~nrts/scripts/ScriptSetup
if (! -e $setup ) then
    echo "${myname}: missing $setup"
    goto failure
endif
source $setup

# Command line setup

set error = 0
if ($#argv == 0) then
    set ViaISP = 0
    set site = $DefaultSite
else if ($#argv == 1) then
    if ($argv[1] == "ViaISP") then
        set ViaISP = 1
        set site = $DefaultSite
    else
        set ViaISP = 0
        set site = $argv[1]
    endif
else if ($#argv == 2) then
    if ($argv[1] == "ViaISP") then
        set ViaISP = 1
        set site = $argv[2]
    else if ($argv[2] == "ViaISP") then
        set ViaISP = 1
        set site = $argv[1]
    else
        set error = 1
    endif
else
    set error = 2
endif

if ($error) then
    echo "bad command line, error $error"
    echo "usage: $myname [ site ]"
    goto failure
endif

# Get the full path names

set SiteDir = $NRTS_HOME/$site
set IsoDir  = $SiteDir/iso

# Nothing to do if there isn't a iso directory

if (! -d $IsoDir) then
    set message = "no iso dir $IsoDir"
    logger -t $myname"[$$]" -p user.info "$message"
    echo "${myname}: $message"
    goto failure
endif
# Set up subdirectories

cd $IsoDir
if ($status != 0) then
    set message = "can't change directory to $IsoDir"
    logger -t $myname"[$$]" -p user.info "$message"
    echo "${myname}: $message"
    goto failure
endif

set DoneIsos = "$IsoDir/done/images"
if (! -e $DoneIsos) then
    set command = "mkdir -p $DoneIsos"
    logger -t $myname"[$$]" -p user.info "$command"
    $command
    if ($status != 0) then
        logger -t $myname"[$$]" -p user.info "FAILED"
        goto failure
    endif
endif

# Find all the available images

@ count = 0
set dummy = Dummy.iso
touch $dummy
set images = `ls *.iso`
@ NumImages = `echo $images | wc -w` - 1
rm -rf $dummy
if ($NumImages == 0) goto NormalExit

# Find the CDR device

echo "Checking CD writer status, please wait..."

set CDR_Device = `cdrw -l | grep -i writer | awk '{print $1}'`
if ($status != 0) then
    echo "${myname}: unable to determine CDR device"
    goto failure
endif

if ($NumImages > 1) then
    echo ""
    echo "$NumImages ISO images are ready to be copied to CD-ROM.  These images"
    echo "will be copied one by one.  After each copy is complete you"
    echo "will be give the opportunity to generate additional copies of"
    echo "the same data before proceeding to the next image."
else if ($NumImages == 1) then
    echo ""
    echo "1 ISO image is ready to be copied to CD-ROM.  After the copy"
    echo "is complete, you will be given the opportunity to generate"
    echo "additional copies of the same data."
endif

foreach image ($images)

    if ($image == $dummy) continue
    @ count++

    @ CopyCount = 1
    echo ""
    echo "*** About to copy ISO image $image ***"

BurnCD:

    echo -n "Insert a blank CD and press enter when ready (or quit to abort) "
    set answer = $<
    if ($answer == q || $answer == quit) goto PrematureExit
    set command = "cdrw -i $image"
    $command
    set exitstatus = $status

TryAgain:
    if ($exitstatus != 0) then
        set result = FAILURE
        echo -n "Operation failed.  Try again? "
        set answer = $<
        if ($answer == y || $answer == yes) then
            eject $CDR_Device
            goto BurnCD
        endif
        if ($answer == n || $answer == no ) then
            if ($CopyCount > 1) then
                set result = SUCCESS
                goto ImageCopyAttemptCompleted
            else
                goto PrematureExitWithErrors
            endif
        endif
        echo "Please answer yes or no."
        goto TryAgain
    else
        set result = SUCCESS
        echo -n "$image copied OK.  Generate another CD with the same data? "
        set answer = $<
        if ($answer == y || $answer == yes) then
            @ CopyCount++
            goto BurnCD
        endif
        if ($answer != n && $answer != no) then
            echo "Please answer yes or no."
            goto TryAgain
        endif
    endif

ImageCopyAttemptCompleted:
    if ($result == SUCCESS) then
        mv $image $DoneIsos
        pkill -HUP -x -u nrts ispd
        pkill -HUP -x -u nrts ispDisplay
    else
        goto TryAgain
    endif
    
end

NormalExit:
pkill -HUP -x -u nrts ispd
echo ""
if ($count > 0) then
    echo "CD generation completed OK."
    echo ""
    echo "/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"
    echo "\!\!\! Remember to make sure you leave a blank CD in the drive \!\!\!"
    echo "/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"
else
    echo "No ISO images are ready.  If desired, you may use the 'fb'"
    echo "command to force the staged files into a short ISO volume"
    echo "which you may then archive to the CD."
endif
echo ""
if ($ViaISP) then
    echo -n "Press enter to return to main screen..."
    set answer = $<
endif

exit 0

PrematureExitWithErrors:
echo ""
echo "CD generation terminated prematurely due to errors."
PrematureExit:
pkill -HUP -x -u nrts ispd
echo ""
if ($ViaISP) then
    echo -n "Press enter to return to main screen..."
    set answer = $<
endif

exit 0

failure:
pkill -HUP -x -u nrts ispd
echo ""
echo "*************************************************************************"
echo "SERIOUS PROBLEM: Unable to execute $myname script due to unexpcted errors"
echo "*************************************************************************"
echo ""
echo "Please note any error messages and contact IDA for assistance."
echo ""
if ($ViaISP) then
    echo -n "Press enter to return to main screen..."
    set answer = $<
endif

exit 1

# Revision History
#
# $Log: isiBurnCD,v $
# Revision 1.6  2005/10/11 18:19:36  dechavez
# fixed command line parsing, improved error reporting
#
# Revision 1.5  2005/10/11 00:01:55  dechavez
# remove starting dir requirement and default to DefaultSite if not specified
#
# Revision 1.4  2005/09/29 21:15:17  dechavez
# kill exact names with pkill -x
#
# Revision 1.3  2005/09/15 17:09:53  dechavez
# remove call to (non-existant) isiNoteFailure
#
# Revision 1.2  2005/08/26 20:28:13  dechavez
# moved ViaIsp support to the start, in order to get starting directory correct
#
# Revision 1.1  2005/08/17 21:06:56  dechavez
# initial release
#
