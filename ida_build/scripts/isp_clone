#!/bin/csh -f
# $Id: isp_clone,v 1.1.1.1 2000/02/08 20:20:44 dec Exp $
#
# Clone an ISP from backup tape.
#
# The user needs to specify the pathname for a file which
# contains commands to partition the disk.  For example,
# the following will partition the standard ISP disk
# ("standard" as of the time of this writing, anyway)
# the Western Digital Caviar 21600:
#
#     part
#     0 root wm 3 28c
#     1 var wm 29 51c
#     3 swap wu 80 66c
#     5 usr wm 146 51c
#     6 usr wm 197 61c
#     7 usr wm 258 523c
#     label
#     quit
#     quit
#
# For the 2.6 Solaris distribution that that this was
# developed with, you should partition new disks with
# the following minimum sizes:
#
# Part      Tag    Flag     Cylinders       Size            Blocks
#   0       root    wm       3 -  28       51.19MB    (26/0/0)   104832
#   1        var    wm      29 -  79      100.41MB    (51/0/0)   205632
#   2     backup    wm       0 - 780        1.50GB    (781/0/0) 3148992
#   3       swap    wu      80 - 145      129.94MB    (66/0/0)   266112
#   4 unassigned    wm       0              0         (0/0/0)         0
#   5 unassigned    wm     146 - 196      100.41MB    (51/0/0)   205632
#   6        usr    wm     197 - 257      120.09MB    (61/0/0)   245952
#   7        usr    wm     258 - 780        1.01GB    (523/0/0) 2108736
#   8       boot    wu       0 -   0        1.97MB    (1/0/0)      4032
#   9 alternates    wu       1 -   2        3.94MB    (2/0/0)      8064
#
# Assumes that this is an x86 Solaris system!
# Assumes that the backup tape has a specific structure!
# Does not prevent you from destroying everything!

if ( -e /usr/ucb/whoami ) then
    set iam = `/usr/ucb/whoami`
else
    echo "can't determine user id"
    exit 1
endif

if ($iam != root) then
    echo "Must be run as root"
    exit 1
endif

if ($#argv != 3) then
    echo "usage: isp_clone tape_device disk-name partition-commands"
    exit 1
endif

set tape  = $argv[1]
set tapeN = "$tape"n
set disk  = $argv[2]
set cmnds = $argv[3]

set rewind     = "mt -f $tape rewind"
set skip       = "mt -f $tapeN fsf"
set restore    = "ufsrestore rf $tape"

set rdsk = /dev/rdsk/$disk
set rawsystems = ""
set rawsystems = "$rawsystems "$rdsk"s0" # /
set rawsystems = "$rawsystems "$rdsk"s6" # /usr
set rawsystems = "$rawsystems "$rdsk"s1" # /var
set rawsystems = "$rawsystems "$rdsk"s5" # /opt
set rawsystems = "$rawsystems "$rdsk"s7" # /usr/nrts
set bootdisk   = "$rdsk"s2
set fdiskdisk  = "$rdsk"p0

set dsk = /dev/dsk/$disk
set systems    = ""
set systems = "$systems "$dsk"s0" # /
set systems = "$systems "$dsk"s6" # /usr
set systems = "$systems "$dsk"s1" # /var
set systems = "$systems "$dsk"s5" # /opt
set systems = "$systems "$dsk"s7" # /usr/nrts

set ok = 1
foreach file ($cmnds)
    if (! -e $file) then
        echo "missing $file"
        set ok = 0
    endif
end

if (! $ok) goto abort

# Make sure we can see the tape

$rewind
if ($status != 0) goto tape_error

# Initialize the disk

do_fdisk:

echo    "About to fdisk $fdiskdisk. This will effectively erase the disk\!"
echo    "If you specified the wrong disk, you could destroy your OS\!"
echo -n "OK to continue? "
set answer = $<
if ($answer == y || $answer == yes) then
    set ok = 1
else if ($answer == n || $answer == no) then
    set ok = 0
else
    echo "Please answer yes or no."
    goto do_fdisk
endif

if (! $ok) goto quit

echo ""
set command = "fdisk -B $fdiskdisk"
echo "Creating 100% Solaris fdisk partition with:"
echo $command
$command << EOF
yes
EOF
if ($status != 0) goto abort

# Partition the disk

echo ""
echo "Partitioning the disk: "
set command = "format -d $disk -f $cmnds"
echo $command
$command
if ($status != 0) goto abort
 
# Create the file systems

echo ""
echo "Creating filesystems:"
foreach rawdevice ($rawsystems)
    set command = "newfs -v $rawdevice"
    echo $command
    $command << EOF
yes
EOF
    if ($status != 0) goto abort
end

# Restore from tape

echo ""
echo "Restoring from $tape"\:
@ numfiles = 0
foreach device ($systems)
    set command = "mount $device /mnt"
    echo $command
    $command
    if ($status != 0) goto abort
    cd /mnt
    if ($status != 0) goto abort
    set command = "$rewind"
    echo $command
    $command
    if ($status != 0) goto tape_error
    if ($numfiles > 0) then
        set command = "$skip $numfiles"
        echo $command
        $command
        if ($status != 0) goto tape_error
    endif
    set command = "$restore"
    echo $command
    $command
    if ($status != 0) goto abort
    cd /
    if ($status != 0) goto abort
    rm /mnt/restoresymtable
    sync; sync; sync
    set command = "umount /mnt"
    echo $command
    $command
    if ($status != 0) goto abort
    @ numfiles += 1
end

# Install bootblock

echo ""
echo "Install bootblock:"
set ufsdir  = /usr/platform/`uname -i`/lib/fs/ufs
set command = "cd $ufsdir"
echo $command
$command
if ($status != 0) goto abort
set command = "installboot pboot bootblk $bootdisk"
echo $command
$command
if ($status != 0) goto abort

# All done

echo ""
echo "All done\!"
exit 0

tape_error:
    echo "Tape error -- ABORT"
    exit 1

quit:
    echo "Terminated at user request."
    exit 0

abort:
    echo "Fatal error -- ABORT"
    exit 1

# Revision History
#
# $Log: isp_clone,v $
# Revision 1.1.1.1  2000/02/08 20:20:44  dec
# import existing IDA/NRTS sources
#
