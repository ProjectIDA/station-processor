#pragma ident "$Id: options.h,v 1.1.1.1 2000/02/08 20:20:14 dec Exp $"
#ifndef options_h_included
#define options_h_included

static XrmOptionDescRec options[] = {
	{"-geometry", "*geometry", XrmoptionSepArg, NULL},
	{"-if", "*inputfile", XrmoptionSepArg, NULL},
	{"if=", "*inputfile", XrmoptionStickyArg, NULL},
	{"-home",    "*home",    XrmoptionSepArg, NULL},
	{"home=",    "*home",    XrmoptionStickyArg, NULL},
	{"-log",    "*log",    XrmoptionSepArg, NULL},
	{"log=",    "*log",    XrmoptionStickyArg, NULL},
	{"-sort",    "*sort",    XrmoptionSepArg, NULL},
	{"sort=",    "*sort",    XrmoptionStickyArg, NULL},
	{"-debug",    "*debug",    XrmoptionSepArg, NULL},
	{"debug=",    "*debug",    XrmoptionStickyArg, NULL},
	{"-decim",    "*decim",    XrmoptionSepArg, NULL},
	{"decim=",    "*decim",    XrmoptionStickyArg, NULL},
	{"-timeout",    "*timeout",    XrmoptionSepArg, NULL},
	{"timeout=",    "*timeout",    XrmoptionStickyArg, NULL},
	{"-keep_up",    "*keep_up",    XrmoptionSepArg, NULL},
	{"keep_up=",    "*keep_up",    XrmoptionStickyArg, NULL},
	{"-chan",    "*keeparg",    XrmoptionSepArg, NULL},
	{"chan=",    "*keeparg",    XrmoptionStickyArg, NULL},
	{"-beg",    "*beg",    XrmoptionSepArg, NULL},
	{"beg=",    "*beg",    XrmoptionStickyArg, NULL},
	{"-end",    "*end",    XrmoptionSepArg, NULL},
	{"end=",    "*end",    XrmoptionStickyArg, NULL},
	{"-compress",    "*compress",    XrmoptionSepArg, NULL},
	{"comp=",    "*compress",    XrmoptionStickyArg, NULL},
	{"-port",    "*port",    XrmoptionSepArg, NULL},
	{"port=",    "*port",    XrmoptionStickyArg, NULL},
	{"-gain",    "*ygain",    XrmoptionSepArg, NULL},
	{"gain=",    "*ygain",    XrmoptionStickyArg, NULL},
	{"-help",    "*help",    XrmoptionNoArg, "True"},
	{"-h",    "*help",    XrmoptionNoArg, "True"},
};



static XtResource resources[] = {
  {
    "geometry",
    "Geometry",
    XtRString,
    sizeof(String),
    XtOffsetOf(AppData, geometry),
    XtRString,
    (XtPointer) NULL,
  },
  {
    "inputfile",
    "Inputfile",
    XtRString,
    sizeof(String),
    XtOffsetOf(AppData, inputfile),
    XtRString,
    (XtPointer) NULL,
  },
  {
    "home",
    "Home",
    XtRString,
    sizeof(String),
    XtOffsetOf(AppData, home),
    XtRString,
    (XtPointer) NULL,
  },
  {
    "log",
    "Log",
    XtRString,
    sizeof(String),
    XtOffsetOf(AppData, log),
    XtRString,
    (XtPointer) NULL,
  },
  {
    "sort",
    "Sort",
    XtRString,
    sizeof(String),
    XtOffsetOf(AppData, sort),
    XtRString,
    (XtPointer) "chan",
  },
  {
    "debug",
    "Debug",
    XtRString,
    sizeof(String),
    XtOffsetOf(AppData, debug),
    XtRString,
    (XtPointer) "1",
  },
  {
    "decim",
    "Decim",
    XtRString,
    sizeof(String),
    XtOffsetOf(AppData, decim),
    XtRString,
    (XtPointer) "0",
  },
  {
    "timeout",
    "Timeout",
    XtRString,
    sizeof(String),
    XtOffsetOf(AppData, timeout),
    XtRString,
    (XtPointer) "120",
  },
  {
    "keep_up",
    "Keep_up",
    XtRString,
    sizeof(String),
    XtOffsetOf(AppData, keep_up),
    XtRString,
    (XtPointer) "30",
  },
  {
    "keeparg",
    "Keeparg",
    XtRString,
    sizeof(String),
    XtOffsetOf(AppData, keeparg),
    XtRString,
    (XtPointer) NULL,
  },
  {
    "beg",
    "Beg",
    XtRString,
    sizeof(String),
    XtOffsetOf(AppData, beg),
    XtRString,
    (XtPointer) NULL,
  },
  {
    "end",
    "End",
    XtRString,
    sizeof(String),
    XtOffsetOf(AppData, end),
    XtRString,
    (XtPointer) NULL,
  },
  {
    "compress",
    "Compress",
    XtRString,
    sizeof(String),
    XtOffsetOf(AppData, compress),
    XtRString,
    (XtPointer) "0",
  },
  {
    "port",
    "Port",
    XtRString,
    sizeof(String),
    XtOffsetOf(AppData, port),
    XtRString,
    (XtPointer) "-1",
  },
  {
    "ygain",
    "Yain",
    XtRString,
    sizeof(String),
    XtOffsetOf(AppData, ygain),
    XtRString,
    (XtPointer) "1.0",
  },
  {
    "help",
    "Help",
    XtRBoolean,
    sizeof(Boolean),
    XtOffsetOf(AppData, help),
    XtRImmediate,
    (XtPointer) False,
  },
  {
    "confirmExit",
    "ConfirmExit",
    XtRBoolean,
    sizeof(Boolean),
    XtOffsetOf(AppData, confirmExit),
    XtRImmediate,
    (XtPointer) True,
  },
  {
    "plotWidth",
    "PlotWidth",
    XtRInt,
    sizeof(int),
    XtOffsetOf(AppData, plotWidth),
    XtRImmediate,
    (XtPointer) 900,
  },
  {
    "plotHeight",
    "PlotHeight",
    XtRInt,
    sizeof(int),
    XtOffsetOf(AppData, plotHeight),
    XtRImmediate,
    (XtPointer) 100,
  },
  {
    "inputEncoding",
    "InputEncoding",
    XtRString,
    sizeof(String),
    XtOffsetOf(AppData, inputEncoding),
    XtRString,
    (XtPointer) NULL,
  },
  {
    "outputEncoding",
    "OutputEncoding",
    XtRString,
    sizeof(String),
    XtOffsetOf(AppData, outputEncoding),
    XtRString,
    (XtPointer) NULL,
  },
  {
    "textLang",
    "TextLang",
    XtRString,
    sizeof(String),
    XtOffsetOf(AppData, textLang),
    XtRString,
    (XtPointer) NULL,
  },
  {
    "helpPath",
    "HelpPath",
    XtRString,
    sizeof(String),
    XtOffsetOf(AppData, helpPath),
    XtRString,
    (XtPointer) NULL,
  },
  {
    "helpFile",
    "HelpFile",
    XtRString,
    sizeof(String),
    XtOffsetOf(AppData, helpFile),
    XtRString,
    (XtPointer) NULL,
  },
};

#endif

/* Revision History
 *
 * $Log: options.h,v $
 * Revision 1.1.1.1  2000/02/08 20:20:14  dec
 * import existing IDA/NRTS sources
 *
 */
