#!/bin/csh
# $Id: nrts_checkppp,v 1.1.1.1 2000/02/08 20:20:45 dec Exp $
#
# Check the PPP log files to look for dangerous activity
# Must be run as root, as it will kill runaway PPP connections,
# however the enable/disable options can be run by anybody.

set interval = 3600   # interval in which to count connections
set max_conn = 6      # max number of connections/interval
set max_uptm = 900    # max connect time if presently connected
set max_age  = 3600   # max age of test flag to prevent new runs

if ($?NRTS_HOME) then
    set nrts_home = $NRTS_HOME
else
    set nrts_home = /usr/nrts
endif
 
if (! -e $nrts_home) then
    echo "missing NRTS_HOME '$nrts_home'"
    exit 1
endif

set tst = /tmp/nrts_checkpppFLAG
if ($#argv == 1) then
    if ($argv[1] == disable) then
        touch $tst
        chmod 666 $tst >& /dev/null
        exit 0
    else if ($argv[1] == enable) then
        /bin/rm $tst
        exit 0
    else
        goto help
    endif
else if ($#argv != 0) then
    goto help
endif
 
set platformrc = $nrts_home/.platform
if ( -e $platformrc ) then
    source $platformrc
else
    echo "error: missing $platformrc"
    exit 1
endif
 
if ($osname == sco_sv) then
    set iam = `who -m | awk '{print $1}'`
else if ( -e /usr/ucb/whoami ) then
    set iam = `/usr/ucb/whoami`
else
    echo "can't determine user id"
    exit 1
endif
 
if ($ostype == SVR4) then
    set owner = "nrts:nrts"
else
    set owner = "nrts.nrts"
endif
 
if ($iam != root) then
    echo "Must be run as root"
    exit 1
endif
 
set path = ($nrts_home/bin/$platform /usr/local/bin $path)

set log   = /tmp/nrts_checkppp$$
set admin = postmaster
set date  = `date +%m/%d-%H:%M:%S`
set mail  = /usr/ucb/mail
set dialups = /usr/nrts/etc/Dialups

if ( -e $tst) then
    @ now = `gmt raw`
    @ ttime = `modtime $tst`
    @ age = $now - $ttime
    if ($age > $max_age) then
        /bin/rm $tst
    else
        exit 0
    endif
endif

set notify   = 0

cp /dev/null $log
echo "$date begin PPP checks" >> $log
echo "$date dialups = $dialups" >> $log
if (! -d $dialups) then 
    echo "$date missing dialups" >> $log
    goto abort
endif
echo "$date interval = $interval seconds" >> $log
echo "$date max no. connects = $max_conn" >> $log
echo "$date max connect time = $max_uptm" >> $log
if ($?DRM_HOME) then
    set deferred = $DRM_HOME/deferred
else
    set deferred = $nrts_home/drm/deferred
endif
    
cd $dialups
if ($status != 0) then
    echo "$date can't cd to $dialups" >> $log
    goto abort
endif

foreach system (*)
    set trigger = 0
    set ddir = $deferred/$system
    set file = /var/adm/pppd_$system.log

    echo " " >> $log
    echo "$date $system" >> $log
    if (! -e $file) then
        echo "$date system $system is not a PPP dialup" >> $log
        goto end_of_loop
    endif
        
    echo "$date checking $file" >> $log
    set results = `cppp $interval < $file`
    if ($status != 0) then
        echo "$date cppp failed" >> $log
        goto abort
    endif
    echo "$date no. connects = $results[1]" >> $log
    echo "$date uptime       = $results[2] sec" >> $log
    if ($results[1] > $max_conn) then
        echo "$date TOO MANY CONNECTIONS" >> $log
        set trigger = 1
    endif
    if ($results[2] > $max_uptm) then
        echo "$date PHONE CALL TOO LONG" >> $log
        set trigger = 1
        set command = "kill -INT $results[3]"
        echo "$date $command" >> $log
        $command
    endif
    if ($trigger) then
        if (-d $ddir) then
            echo "$date system $system is already deferred" >> $log
        else
            set notify = 1
            echo "$date mkdir -p $ddir" >> $log
            mkdir -p $ddir
            if ($status != 0) then
                echo "$date mkdir failed" >> $log
                goto abort
            endif
            chown nrts $ddir
            if ($status != 0) then
                echo "$date chown nrts failed" >> $log
                goto abort
            endif
        endif
    else
        echo "$date $system is OK" >> $log
    endif
end_of_loop:
end

if ($notify) then
    $mail -s "PPP watchdog deferral(s) triggered" $admin < $log
endif

    goto done

abort:

    $mail -s "nrts_checkppp FAILED" $admin < $log
    touch $tst
    chmod 666 $tst
    goto done

done:

    rm $log
    exit 0

help:

    echo "usage: nrts_checkppp [enable | disable]"
    exit 1

# Revision History
#
# $Log: nrts_checkppp,v $
# Revision 1.1.1.1  2000/02/08 20:20:45  dec
# import existing IDA/NRTS sources
#
