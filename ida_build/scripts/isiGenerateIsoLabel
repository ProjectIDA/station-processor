#!/bin/csh -f
# $Id: isiGenerateIsoLabel,v 1.9 2008/03/24 19:20:40 dechavez Exp $

# Find first and last files in this volume

set files = (*.gz)
set FirstFile = $files[1]
set LastFile = $files[$#files]

# Determine time span based on file age

set FileTimes = `filetimes $FirstFile`
set FileBeg = `substring $FileTimes[3] 1 14`

set FileTimes = `filetimes $LastFile`
set FileEnd = `substring $FileTimes[3] 1 14`

# Determine time span based on file contents, if supported

if ($PktRev == 9 || $PktRev == 10) then

    set range = `idaspan if=$FirstFile rev=$PktRev reclen=$PktLen`
    set DataBeg = $range[1]

    set range = `idaspan if=$LastFile rev=$PktRev reclen=$PktLen`
    set DataEnd = $range[2]

    set DataTimesKnown = 1

else

    set DataTimesKnown = 0

endif

# Generate the human readable README.txt

set README = ./README
cp /dev/null $README

echo "Station Code  = $StaName" >> $README
echo "Packet Format = $PktRev" >> $README
echo "Record length = $PktLen bytes" >> $README
echo "File Dates:  $FileBeg through $FileEnd"   >> $README
if ($DataTimesKnown) then
    echo "Data Dates:  $DataBeg through $DataEnd *" >> $README
    echo "" >> $README
    echo "* Data Dates may not be accurate if there are clock problems" >> $README
endif
unix2dos < $README > $README.txt
rm -f $README

# Generate the machine readable CONTENTS

set CONTENTS = ./CONTENTS
rm -f $CONTENTS
if ($DataTimesKnown) then
    set contents = "$StaName $PktRev $PktLen $FileBeg $FileEnd $DataBeg $DataEnd"
else
    set contents = "$StaName $PktRev $PktLen $FileBeg $FileEnd"
endif
echo $contents > $CONTENTS
if ($PktRev == 9 || $PktRev == 10) isils $PktRev >> $CONTENTS
unix2dos < $CONTENTS > $CONTENTS.txt
rm -f $CONTENTS

# Copy over metadata for IDA9

set meta = ./meta/etc
set etc = $NRTS_HOME/etc

if ($PktRev == 9 && -e $etc) then
    mkdir -p $meta >& /dev/null
    foreach file (Systems calibration coords revs sint tqual maps)
        cp -r $etc/$file $meta
    end
endif

# Copy over metadata for QDPLUS

if ($PktRev == QDPLUS) then
    set MetaDir = $NRTS_HOME/$site/meta
    if (-d $MetaDir) cp -r $MetaDir .
endif

# Set up for autorun

set idacd = $NRTS_HOME/etc/start/idacd.exe
if ( -e $idacd ) then
    cp $idacd .
    set autorun = autorun
    cp /dev/null $autorun
    echo \[autorun\] >> $autorun
    echo "open=idacd.exe" >> $autorun
    echo "icon=idacd.exe" >> $autorun
    unix2dos < $autorun > $autorun.inf
    rm -f $autorun
endif

# Generate the volume ID and image name

set yr   = `substring $FileEnd 3 2`
set day  = `substring $FileEnd 6 3`
set hr   = `substring $FileEnd 10 2`
set m    = `substring $FileEnd 13 1`
set ImageName = "${yr}${day}${hr}${m}"

set FileBeg = `substring $FileBeg 1 11`
set FileEnd = `substring $FileEnd 1 11`
set VolId = "${StaName}_${FileBeg}_${FileEnd}"

exit 0

# Revision History
#
# $Log: isiGenerateIsoLabel,v $
# Revision 1.9  2008/03/24 19:20:40  dechavez
# include IDA9 metadata
#
# Revision 1.8  2008/03/20 19:11:51  dechavez
# fixed problem with readme.txt on non-IDA systems
#
# Revision 1.7  2008/03/19 19:45:33  dechavez
# change image name to something more tolerant of MSDOS 8.3 restrictions
#
# Revision 1.6  2008/02/01 22:56:50  dechavez
# use substring instead of non-portable expr substr
#
# Revision 1.5  2008/01/14 17:41:49  dechavez
# Changed conditions on data time computation to be more general, allowing
# transparent support for all non-IDA formats (ie, MiniSEED)
#
# Revision 1.4  2007/05/16 17:40:06  dechavez
# support for images of QDPLUS data
#
# Revision 1.3  2005/10/20 20:06:14  dechavez
# removed gzcat pipe into idaspan now that idaspan can read gzip data directly
#
# Revision 1.2  2005/09/29 21:14:37  dechavez
# fixed bug in naming autorun.inf
#
# Revision 1.1  2005/08/17 21:06:56  dechavez
# initial release
#
